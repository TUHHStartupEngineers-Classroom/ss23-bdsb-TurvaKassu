{
  "hash": "49d2471cf3c2a4b48c858fdc8d8b1246",
  "result": {
    "markdown": "::: {.cell hash='Challenge_cache/html/unnamed-chunk-1_860954de93727ac3d1dd6fea22a8cbfd'}\n\n```{.r .cell-code}\n# Data Science at TUHH ------------------------------------------------------\n# SALES ANALYSIS ----\n\n# 1.0 Load libraries ----\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(lubridate)\n\n# 2.0 Importing Files ----\nbikes_tbl <- read_excel(\n  \"C:\\\\Users\\\\35844\\\\ML\\\\ss23-bdsb-TurvaKassu\\\\Tidyverse\\\\bikes.xlsx\")\nbikeshops_tbl <- read_excel(\n  \"C:\\\\Users\\\\35844\\\\ML\\\\ss23-bdsb-TurvaKassu\\\\Tidyverse\\\\bikeshops.xlsx\")\norderlines_tbl <- read_excel(\n  \"C:\\\\Users\\\\35844\\\\ML\\\\ss23-bdsb-TurvaKassu\\\\Tidyverse\\\\orderlines.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\n# 3.0 Examining Data ----\nbikes_tbl  %>% head(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 9\n  bike.id model     model.year frame.material weight price category gender url  \n    <dbl> <chr>          <dbl> <chr>           <dbl> <dbl> <chr>    <chr>  <chr>\n1    2875 Aeroad C…       2020 carbon           7.6   4579 Road - … unisex http…\n2    2873 Aeroad C…       2020 carbon           7.27  6919 Road - … unisex http…\n3    2874 Aeroad C…       2020 carbon           7.1   6429 Road - … unisex http…\n4    2876 Aeroad C…       2020 carbon           7.73  5069 Road - … unisex http…\n5    2877 Aeroad C…       2020 carbon           7.83  3609 Road - … unisex http…\n```\n:::\n\n```{.r .cell-code}\nbikeshops_tbl %>% head(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 5\n  bikeshop.id name                location                          lat   lng\n        <dbl> <chr>               <chr>                           <dbl> <dbl>\n1           1 Zum Goldenen Lenker Berlin, Berlin                   52.5 13.4 \n2           2 AlexandeRad         Hamburg, Hamburg                 53.6 10.0 \n3           3 Fahrradladen 16     Munich, Bavaria                  48.2 11.6 \n4           4 Bikestation Köln    Cologne, North Rhine-Westphalia  50.9  6.95\n5           5 Montimare           Frankfurt, Hesse                 50.1  8.68\n```\n:::\n\n```{.r .cell-code}\norderlines_tbl %>% head(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 7\n  ...1  order.id order.line order.date          customer.id product.id quantity\n  <chr>    <dbl>      <dbl> <dttm>                    <dbl>      <dbl>    <dbl>\n1 1            1          1 2015-01-07 00:00:00           2       2681        1\n2 2            1          2 2015-01-07 00:00:00           2       2411        1\n3 3            2          1 2015-01-10 00:00:00          10       2629        1\n4 4            2          2 2015-01-10 00:00:00          10       2137        1\n5 5            3          1 2015-01-10 00:00:00           6       2367        1\n```\n:::\n\n```{.r .cell-code}\n# 4.0 Joining Data ----\nmerged_orderlines <- orderlines_tbl %>% \n  left_join(bikes_tbl, by = c(\"product.id\" =  \"bike.id\")) %>%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\n\n# 5.0 Wrangling Data ----\nbike_orderlines_wrangled_tbl <- merged_orderlines %>%\n  # 5.1 Separate category name\n  separate(col    = location,\n           into   = c(\"city\", \"state\"),\n           sep    = \", \") %>%\n  mutate(total.price = price * quantity) %>%\n  select(-ends_with(\".id\")) %>%\n  bind_cols(merged_orderlines %>% select(order.id)) %>%\n  select(order.id, contains(\"order\"), contains(\"model\"), contains(\"category\"),\n         price, quantity, total.price,\n         everything()) %>%\n  rename(bikeshop = name) %>%\n  set_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n\nbike_orderlines_wrangled_tbl %>% head(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 19\n  order_id order_line order_date          model        model_year category price\n     <dbl>      <dbl> <dttm>              <chr>             <dbl> <chr>    <dbl>\n1        1          1 2015-01-07 00:00:00 Spectral CF…       2021 Mountai…  3119\n2        1          2 2015-01-07 00:00:00 Ultimate CF…       2020 Road - …  5359\n3        2          1 2015-01-10 00:00:00 Neuron CF 8        2021 Mountai…  2729\n4        2          2 2015-01-10 00:00:00 Speedmax CF…       2019 Road - …  1749\n5        3          1 2015-01-10 00:00:00 Stitched 36…       2020 Mountai…  1219\n# ℹ 12 more variables: quantity <dbl>, total_price <dbl>, `___1` <chr>,\n#   frame_material <chr>, weight <dbl>, gender <chr>, url <chr>,\n#   bikeshop <chr>, city <chr>, state <chr>, lat <dbl>, lng <dbl>\n```\n:::\n\n```{.r .cell-code}\n# 6.0 Business Insights ----\n\n# 6.1 Sales by Year and State ----\n\n# Step 1 - Manipulate\nsales_by_year_date <- bike_orderlines_wrangled_tbl %>%\n  select(\"order_date\", \"total_price\", \"state\") %>%\n  mutate(year_column = year(order_date)) %>%\n  group_by(year_column, state)%>%\n  summarise(sales = sum(total_price))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year_column'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n  sales_by_year_date\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 60 × 3\n# Groups:   year_column [5]\n   year_column state                           sales\n         <dbl> <chr>                           <dbl>\n 1        2015 Baden-Württemberg             1031924\n 2        2015 Bavaria                       1301461\n 3        2015 Berlin                          95853\n 4        2015 Bremen                        1395912\n 5        2015 Hamburg                        423090\n 6        2015 Hesse                          308609\n 7        2015 Lower Saxony                   584386\n 8        2015 Mecklenburg-Western Pomerania  222003\n 9        2015 North Rhine-Westphalia        3735092\n10        2015 Saxony                         238371\n# ℹ 50 more rows\n```\n:::\n\n```{.r .cell-code}\n# Step 2 - Visualize\nggplot(sales_by_year_date, aes(x = year_column, y = sales, fill = factor(state))) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_wrap(~state, ncol = 3) +\n  labs(x = \"Year\", y = \"Sales\", title = \"Total Price by Year and State\") +\n  scale_fill_discrete(name = \"sales\") + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Challenge_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}